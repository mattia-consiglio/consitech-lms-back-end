name: Build and Deploy to VPS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Set up JDK 21
    #   uses: actions/setup-java@v2
    #   with:
    #     distribution: 'adopt'
    #     java-version: '21'

    # - name: Build with Maven
    #   run: mvn clean package

    - name: Build Docker image
      run: docker build -t consitech-lm-backend .

    - name: Run new container on a different port for testing
      run: |
        docker run -d --name consitech-lm-backend-test -p 8081:8080 \
          -e SERVER_PORT=${{ secrets.SERVER_PORT }} \
          -e DB_URL=${{ secrets.DB_URL }} \
          -e DB_USER=${{ secrets.DB_USER }} \
          -e DB_PASS=${{ secrets.DB_PASS }} \
          -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
          -e SMTP_HOST=${{ secrets.SMTP_HOST }} \
          -e SMTP_PORT=${{ secrets.SMTP_PORT }} \
          -e SMTP_USERNAME=${{ secrets.SMTP_USERNAME }} \
          -e SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} \
          -e ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} \
          -e ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }} \
          -e ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} \
          -e CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} \
          -e CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }} \
          -e CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }} \
          consitech-lm-backend

    - name: Health check
      run: |
        RETRIES=5
        until curl --silent --fail http://localhost:8081 || [ $RETRIES -eq 0 ]; do
          echo "Waiting for container..."
          sleep 10
          RETRIES=$((RETRIES - 1))
        done
        if [ $RETRIES -eq 0 ]; then
          echo "New container failed to start"
          docker logs consitech-lm-backend-test
          docker rm -f consitech-lm-backend-test
          exit 1
        fi

    - name: Stop and remove old container
      run: docker rm -f consitech-lm-backend || true

    - name: Start new container on the original port
      run: |
        docker rm -f consitech-lm-backend-test
        docker run -d --name consitech-lm-backend -p 8080:8080 \
          -e SERVER_PORT=${{ secrets.SERVER_PORT }} \
          -e DB_URL=${{ secrets.DB_URL }} \
          -e DB_USER=${{ secrets.DB_USER }} \
          -e DB_PASS=${{ secrets.DB_PASS }} \
          -e JWT_SECRET=${{ secrets.JWT_SECRET }} \
          -e SMTP_HOST=${{ secrets.SMTP_HOST }} \
          -e SMTP_PORT=${{ secrets.SMTP_PORT }} \
          -e SMTP_USERNAME=${{ secrets.SMTP_USERNAME }} \
          -e SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }} \
          -e ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} \
          -e ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }} \
          -e ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} \
          -e CLOUDINARY_NAME=${{ secrets.CLOUDINARY_NAME }} \
          -e CLOUDINARY_KEY=${{ secrets.CLOUDINARY_KEY }} \
          -e CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }} \
          consitech-lm-backend
